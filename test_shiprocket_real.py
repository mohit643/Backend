# backend/test_shiprocket_detailed.py
from app.config.settings import settings
from app.services.shiprocket_service import shiprocket_service
import json

print("\n" + "="*60)
print("üîç DETAILED SHIPROCKET TEST")
print("="*60)

# 1. Configuration Check
print("\n1Ô∏è‚É£ Configuration:")
print(f"   Debug: {settings.debug}")
print(f"   Email: {settings.shiprocket_email}")
print(f"   Password: {'‚úì' if settings.shiprocket_password else '‚úó'}")
print(f"   Warehouse: {settings.warehouse_pincode}")

# 2. Login Test
print("\n2Ô∏è‚É£ Login Test:")
try:
    token = shiprocket_service.token
    if token:
        print(f"   ‚úÖ Login successful")
        print(f"   Token: {token[:50]}...")
    else:
        print(f"   ‚ùå Login failed")
except Exception as e:
    print(f"   ‚ùå Error: {str(e)}")

# 3. Pincode Test
print("\n3Ô∏è‚É£ Pincode Serviceability:")
test_pincodes = ["212601", "110001", "400001", "560001"]
for pincode in test_pincodes:
    try:
        result = shiprocket_service.check_pincode_serviceability(pincode)
        print(f"   {pincode}: {'‚úÖ Serviceable' if result.get('serviceable') else '‚ùå Not Serviceable'}")
    except Exception as e:
        print(f"   {pincode}: ‚ùå Error - {str(e)}")

# 4. Shipping Rate Test
print("\n4Ô∏è‚É£ Shipping Rate Calculation:")
try:
    rate = shiprocket_service.calculate_shipping_charges("212601", 1.0, 0)
    print(f"   ‚úÖ Rate calculated: ‚Çπ{rate.get('total_charge', 'N/A')}")
except Exception as e:
    print(f"   ‚ùå Error: {str(e)}")

print("\n" + "="*60)
print("‚úÖ Test Complete!")
print("="*60 + "\n")